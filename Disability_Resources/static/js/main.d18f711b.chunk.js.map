{
    "version": 3,
    "sources": [
        "pages/index/Home.js",
        "components/BackButton.js",
        "utils/gpsManager.js",
        "pages/map/Map.js",
        "components/AutoPlayer.js",
        "components/Menu/MenuOverlay.js",
        "pages/tour/AnimateCamera.js",
        "pages/tour/Tour.js",
        "pages/media/Media.js",
        "pages/main/Main.js",
        "pages/intro/Intro.js",
        "pages/error/Error404.js",
        "pages/help/Help.js",
        "utils/withTracker.js",
        "App.js",
        "utils/serviceWorker.js",
        "index.js"
    ],
    "names": [
        "setFullScreen",
        "screenfull",
        "isEnabled",
        "request",
        "window",
        "scrollTo",
        "document",
        "body",
        "scrollHeight",
        "Home",
        "tourBasePath",
        "useContext",
        "Context",
        "history",
        "useHistory",
        "JSON",
        "parse",
        "localStorage",
        "getItem",
        "project_name",
        "intro_audio",
        "useEffect",
        "screen",
        "orientation",
        "locOrientation",
        "lockOrientation",
        "ScreenOrientation",
        "msLockOrientation",
        "lock",
        "console",
        "log",
        "call",
        "warn",
        "querySelector",
        "classList",
        "add",
        "setOrientation",
        "homepage_image",
        "style",
        "setProperty",
        "remove",
        "Fragment",
        "src",
        "howl",
        "className",
        "id",
        "onClick",
        "DeviceMotionEvent",
        "requestPermission",
        "DeviceOrientationEvent",
        "then",
        "response",
        "alert",
        "catch",
        "push",
        "type",
        "library",
        "faUndoAlt",
        "styles",
        "backBtn",
        "position",
        "left",
        "bottom",
        "zIndex",
        "BackButton",
        "toggleModel",
        "alt",
        "color",
        "icon",
        "location",
        "pathname",
        "goBack",
        "currentMarker",
        "AlertLocation",
        "markerName",
        "toastCtn",
        "encodeURIComponent",
        "toastBtn",
        "AlertGoBack",
        "replace",
        "display",
        "fontSize",
        "fontWeight",
        "backgroundColor",
        "onPositionUpdate",
        "markerData",
        "markersInDistance",
        "filter",
        "isBaseHotspot",
        "map",
        "marker",
        "dist",
        "distance",
        "latitude",
        "longitude",
        "sort",
        "a",
        "b",
        "closestMarker",
        "length",
        "name",
        "toast",
        "dismiss",
        "autoClose",
        "TYPE",
        "INFO",
        "draggablePercent",
        "checkForCloseMarker",
        "coords",
        "lat1",
        "lon1",
        "lat2",
        "lon2",
        "radlat1",
        "Math",
        "PI",
        "radlat2",
        "theta",
        "radtheta",
        "sin",
        "cos",
        "acos",
        "isOnCampus",
        "distList",
        "min",
        "isSubHotspot",
        "getSubHotspots",
        "hotspot",
        "getBaseHotspots",
        "tooCloseHotspotList",
        "onCampus",
        "closeHotspot",
        "abs",
        "MarkerHotspots",
        "useMap",
        "adjustMap",
        "useCallback",
        "bounds",
        "target",
        "getBounds",
        "fitBounds",
        "options",
        "center",
        "getCenter",
        "maxBounds",
        "minZoom",
        "getZoom",
        "restrictedMarkers",
        "showCoverageOnHover",
        "maxClusterRadius",
        "eventHandlers",
        "e",
        "key",
        "pin_color",
        "IS_GROUPED_HOTSPOT",
        "Marker",
        "click",
        "zIndexOffset",
        "title",
        "PointIcon",
        "toString",
        "pinColor",
        "undefined",
        "L",
        "Icon",
        "iconUrl",
        "iconSize",
        "Map",
        "props",
        "useState",
        "currentPos",
        "setCurrentPos",
        "GeoError",
        "setError",
        "setOnCampus",
        "initalRegion",
        "checkCamera",
        "navigator",
        "mediaDevices",
        "getUserMedia",
        "audio",
        "video",
        "facingMode",
        "exact",
        "err",
        "setAndLogError",
        "success",
        "pos",
        "error",
        "useLayoutEffect",
        "geolocation",
        "watchPosition",
        "enableHighAccuracy",
        "timeout",
        "Infinity",
        "maximumAge",
        "rel",
        "href",
        "zoom",
        "TileLayer",
        "maxNativeZoom",
        "maxZoom",
        "attribution",
        "url",
        "restrictedMarkersonCampus",
        "CircleMarker",
        "fillOpacity",
        "fillColor",
        "radius",
        "AutoPlayer",
        "React",
        "memo",
        "source",
        "onLoad",
        "onPause",
        "onPlaying",
        "controls",
        "useRef",
        "modelOpen",
        "autoPlay",
        "parseInt",
        "ref",
        "onEnded",
        "setItem",
        "onLoadedMetadata",
        "floor",
        "duration",
        "current",
        "ended",
        "Modal",
        "setAppElement",
        "faBars",
        "faTimes",
        "faBell",
        "NotificationSystem",
        "visitedLibrary",
        "HAS_LIBRARY_ITEMS",
        "istoggled",
        "setState",
        "flash",
        "setAnimation",
        "LIBRARY_EXISTS",
        "GROUP_HOTSPOT_EXISTS",
        "ONE_NOTIFICATIONS_EXIST",
        "BOTH_NOTIFICATIONS_EXIST",
        "width",
        "height",
        "top",
        "right",
        "overlayBtnAlert",
        "onTapStart",
        "state",
        "onAnimationEnd",
        "overlayBtnAlert1",
        "MenuComponent",
        "pages",
        "media",
        "index",
        "to",
        "process",
        "overlayBtn",
        "closeBtn",
        "MenuOverlay",
        "children",
        "data",
        "useCookie",
        "setCookie",
        "media_pages",
        "main_pages",
        "isOpen",
        "contentLabel",
        "overlayClassName",
        "closeTimeoutMS",
        "aria-expanded",
        "join",
        "AnimateCamera",
        "isRotating",
        "setIsRoating",
        "camera",
        "useThree",
        "useFrame",
        "set",
        "faMapMarkerAlt",
        "faEye",
        "faChevronRight",
        "faChevronLeft",
        "SphereOverlay",
        "overlay",
        "texture",
        "useLoader",
        "TextureLoader",
        "dispose",
        "scale",
        "attach",
        "SphereMapAR",
        "virtual_object",
        "constraints",
        "webkitGetUserMedia",
        "mozGetUserMedia",
        "Promise",
        "resolve",
        "reject",
        "Error",
        "stream",
        "srcObject",
        "URL",
        "createObjectURL",
        "onloadedmetadata",
        "play",
        "handleVideo",
        "DeviceOrientationControls",
        "VirtualObject",
        "useGLTF",
        "nodes",
        "materials",
        "material",
        "geometry",
        "Scene",
        "OverlayVR",
        "overlay_size",
        "overlay_offset_x",
        "overlay_offset_y",
        "args",
        "side",
        "FrontSide",
        "CubeMap",
        "panorama_image",
        "fragmentShader",
        "uniforms",
        "value",
        "placement",
        "Vector3",
        "vertexShader",
        "CubeMapVR",
        "OrbitControls",
        "enablePan",
        "enableDamping",
        "minDistance",
        "maxDistance",
        "Loader",
        "useProgress",
        "active",
        "Html",
        "HotspotController",
        "baseName",
        "handleData",
        "hostspotIndex",
        "setHostspotIndex",
        "baseHotspot",
        "pop",
        "locationQueue",
        "CAN_USE_QUEUE",
        "HAS_RIGHT_DATA",
        "HAS_LEFT_DATA",
        "handleLocation",
        "direction",
        "currentIndex",
        "nextIndex",
        "previousIndex",
        "onSelect",
        "preventDefault",
        "Tour",
        "query",
        "URLSearchParams",
        "useLocation",
        "search",
        "INITIAL_STATE",
        "start_audio",
        "StorageData",
        "setStoredData",
        "videoRef",
        "isWindowContext",
        "get",
        "mutatedData",
        "stringify",
        "overflow",
        "muted",
        "playsInline",
        "fov",
        "fallback",
        "PictureContent",
        "description",
        "LinksContent",
        "Media",
        "content",
        "setContent",
        "allowZeroExpanded",
        "naturalSlideWidth",
        "naturalSlideHeight",
        "infinite",
        "totalSlides",
        "content_items",
        "item",
        "item_description",
        "Main",
        "audioTime",
        "setAudioTime",
        "isFaded",
        "setFaded",
        "useAnimation",
        "handleFade",
        "time",
        "start",
        "opacity",
        "transition",
        "startFade",
        "stopFade",
        "stop",
        "attributes",
        "removeNamedItem",
        "main",
        "backgroundImage",
        "background_image",
        "animate",
        "initial",
        "exit",
        "descriptive_audio",
        "StepsMobile",
        "image",
        "Steps360",
        "HelpElement",
        "pattern",
        "matchText",
        "match",
        "split",
        "reduce",
        "accumulator",
        "currentValue",
        "includes",
        "ProcessedSteps",
        "step",
        "Intro",
        "stepNum",
        "SetStepNum",
        "IntroCount",
        "StepData",
        "setStepData",
        "audioPrefix",
        "useHowl",
        "html5",
        "handleFinish",
        "checkPos",
        "text",
        "splitText",
        "matches",
        "arr",
        "element",
        "addIcons",
        "count",
        "Error404",
        "Help",
        "ga_tracking_id",
        "ReactGA",
        "initialize",
        "withTracker",
        "WrappedComponent",
        "debug",
        "trackPage",
        "page",
        "pageview",
        "HOC",
        "App",
        "path",
        "component",
        "isLocalhost",
        "Boolean",
        "hostname",
        "registerValidSW",
        "swUrl",
        "config",
        "serviceWorker",
        "register",
        "registration",
        "onupdatefound",
        "installingWorker",
        "installing",
        "onstatechange",
        "controller",
        "onUpdate",
        "onSuccess",
        "createContext",
        "Provider",
        "currentTour",
        "setTour",
        "setData",
        "useTitle",
        "fetchMarkerData",
        "tourName",
        "alphanumeric",
        "test",
        "fetch",
        "res",
        "json",
        "hasOwnProperty",
        "reload",
        "previousPath",
        "val",
        "ReactDOM",
        "render",
        "basename",
        "substr",
        "lastIndexOf",
        "getElementById",
        "origin",
        "addEventListener",
        "headers",
        "contentType",
        "status",
        "indexOf",
        "ready",
        "unregister",
        "checkValidServiceWorker"
    ],
    "mappings": "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",
    "file": "static/js/main.d18f711b.chunk.js",
    "sourcesContent": [
        "import React, { useEffect, useContext } from 'react';\nimport { Rehowl, Play } from 'rehowl'\nimport { Context } from \"./../../index\";\nimport { useHistory } from \"react-router-dom\";\nimport screenfull from \"screenfull\";\nimport './home.scss';\n\n\nfunction setUpDeviceMotion() {\n  // To make sure the device supports DeviceMotionEvent and can request it\n  // Must check for Sarafi\n  if (\n    typeof DeviceMotionEvent !== \"undefined\" &&\n    typeof DeviceMotionEvent.requestPermission === \"function\"\n  ) {\n    // iOS 13+\n    DeviceOrientationEvent.requestPermission()\n      .then(response => {\n        if (response !== \"granted\") {\n          // permission not granted\n          alert(\"Motion access is required to view this site, Please delete your website cache in Settings -> Safari and reload.\");\n        }\n      })\n      .catch(console.warn);\n  }\n}\n\nfunction setFullScreen() {\n\n  if (screenfull.isEnabled) {\n    screenfull.request();\n  }\n\n  scrollToTop();\n  scrollToBottom();\n}\n\nfunction setOrientation() {\n  if (typeof window.screen.orientation !== \"undefined\") {\n    var locOrientation = window.screen.lockOrientation || window.ScreenOrientation || window.screen.msLockOrientation || window.screen.orientation.lock || null;\n    if (locOrientation === window.ScreenOrientation) {\n      console.log(\"Firefox detected - lack of orientation support\");\n    } else if (locOrientation.call(window.screen.orientation, 'landscape')) {\n    } else {\n      console.warn(\"There was a problem in locking the orientation\");\n    }\n  } else {\n    console.warn(\"Screen Orientation not supported\");\n    // if mobile we can use CSS to rotate or a splash screen to let the user to know\n    document.querySelector(\"html\").classList.add(\"ios-cant-orient\");\n  }\n}\n\nfunction scrollToTop() {\n  window.scrollTo(0, 0);\n  window.scrollTo(0, 1);\n}\n\nfunction scrollToBottom() {\n  window.scrollTo(0, document.body.scrollHeight);\n}\n\nfunction Home() {\n\n  const { tourBasePath } = useContext(Context);\n\n  let history = useHistory();\n  const { project_name, intro_audio } = JSON.parse(localStorage.getItem(\"markerData\")) || { project_name: \"\", intro_audio: \"\" };\n\n  function handleClick() {\n    setFullScreen();\n    setUpDeviceMotion();\n    history.push(\"intro\");\n  }\n\n  useEffect(() => {\n      setOrientation();\n\n      const { homepage_image } = JSON.parse(localStorage.getItem(\"markerData\")) || { homepage_image: \"\" };\n\n      document.body.classList.add(\"homepage\");\n      document.body.style.setProperty('--homepage-background', \n        \"url(\" + process.env.PUBLIC_URL + \"/../../\" + tourBasePath + homepage_image + \")\"\n      );\n      return () =>  document.body.classList.remove(\"homepage\");\n  }, [tourBasePath]);\n\n  return (\n    <React.Fragment>\n      {intro_audio && (<Rehowl src={tourBasePath + intro_audio}>{\n        ({ howl }) => <Play howl={howl} />\n      }</Rehowl>)}\n      <div className=\"homepage\">\n        <div id=\"buttona\" >\n          <button onClick={handleClick} type=\"button\">BEGIN TOUR</button>\n        </div>\n        <div id=\"introTxt\">{ project_name }</div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n",
        "import React, { useContext } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Context } from \"./../index\";\n\nlibrary.add(faUndoAlt);\n\nfunction BackButton({history}) {\n    const {toggleModel} = useContext(Context);\n    const handleBack = () => {\n        if (history.location.pathname !== \"/map\")\n            toggleModel(true);\n        history.goBack();\n    };\n    return(\n        <div id=\"overlaybuttonback\">\n            <FontAwesomeIcon className={\"overlay-icon\"}\n                alt=\"back-arrow\"\n                color={\"white\"}\n                icon={faUndoAlt}\n                onClick={handleBack}\n                style={styles.backBtn}\n            />\n        </div>\n    );\n}\n\nconst styles = {\n    backBtn: {\n        position: \"fixed\",\n        left: \".25em\",\n        bottom: \".25em\",\n        zIndex: 10\n    }\n}\nexport default BackButton;\n",
        "import React from 'react';\nimport { toast } from \"react-toastify\";\n\n\n// configuarable values \nconst HOTSPOT_RADIUS = 0.0076; // 0.0075 miles == 40 feet\n\nconst CAMPUS_RADIUS = 0.1087359848; // 0.1087 miles == 82 feet + 150 meter accuracy\n\nlet currentMarker = null;\n\nfunction setCurrentMarker( marker ) {\n\tcurrentMarker = marker;\n}\n\nconst AlertLocation = ({ markerName, history  }) => {\n\treturn (\n\t\t<div>\n\t\t\t<p style={styles.toastCtn}>\n\t\t\t\tIt appears that you're at the { markerName }.\n\t\t\t\t<button \n\t\t\t\t\tonClick={() => history.push(`/tour?name=${encodeURIComponent(markerName)}`)}\n\t\t\t\t\tstyle={styles.toastBtn}\n\t\t\t\t>\n\t\t\t\t\tView Hotspot\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\n\nconst AlertGoBack = ({ markerName, history  }) => {\n\treturn (\n\t\t<div>\n\t\t\t<p style={styles.toastCtn}>\n\t\t\t\tIt appears that you've left the { markerName }.\n\t\t\t\t<button \n\t\t\t\t\tonClick={() => history.replace(\"/map\")}\n\t\t\t\t\tstyle={styles.toastBtn}\n\t\t\t\t>\n\t\t\t\t\tGo to Map\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nconst styles = {\n    toastCtn: {\n\t\tdisplay: \"flex\",\n\t\tfontSize: \"1.1em\",\n\t\tfontWeight: \"bold\"\n\t},\n\ttoastBtn: {\n\t\tbackgroundColor: \"white\",\n    \tfontWeight: \"bold\"\n\t}\n}\n\n// when the user moves postions\nexport function onPositionUpdate( position, history, markerData) {\n    // and fine the next closest points\n\tcheckForCloseMarker( position.coords, history, markerData);\n}\n\n// checks to see if near a hotspot\nfunction checkForCloseMarker( position, history, markerData) {\n\tconst markerObj = markerData\n\t\t// first remove all non-base hotspots\n\t\t.filter(markerData => isBaseHotspot(markerData))\n\t\t// then check for the distance\n\t\t.map( marker => {\t\t\n        var dist = distance( position.latitude, position.longitude, marker.latitude, marker.longitude );\n\t\t// build an object of marker and its distance\n\t\treturn {...marker,  dist};\n\t});\n\n\t// only keep markers in the distance\n\tconst markersInDistance = markerObj.filter(marker => {return marker.dist < HOTSPOT_RADIUS})\n\t// the  we sort it to find the lowest value\n\t.sort(function (a, b) {\n\t\treturn a.dist - b.dist\n\t});\n\n\t// TODO: maybe we should use UUID's hear since maybe the names could be the same\n\tconst closestMarker = markersInDistance.length === 0 ? null :  markersInDistance[0].name;\n\n\t// if previous marker isn't closestMarker, set it\n\tif ( currentMarker !== closestMarker ) {\n\t\t// remove all previous toasts\n\t\ttoast.dismiss();\n\t\t// and if a marker is near, we create an alert\n\t\t// and makes sure they are the map page, as others result in history goBack issues\n\t\tif (closestMarker !== null && history.location.pathname === \"/map\") {\n\t\t\t// create a new one\n\t\t\ttoast(<AlertLocation markerName={closestMarker} history={history}/>, {\n\t\t\t\tautoClose: false,\n\t\t\t\ttype: toast.TYPE.INFO,\n\t\t\t\tdraggablePercent: 50\n\t\t\t});\n\t\t// otherwise if the user now left the area and isn't on the map page\n\t\t} else if(closestMarker === null && history.location.pathname === \"/tour\") {\n\t\t\ttoast(<AlertGoBack markerName={currentMarker} history={history}/>, {\n\t\t\t\tautoClose: false,\n\t\t\t\ttype: toast.TYPE.INFO,\n\t\t\t\tdraggablePercent: 50\n\t\t\t});\n\t\t}\n\t\tsetCurrentMarker( closestMarker );\n\t}\n}\n\n\n\n// TODO: we can probably replace this will a module - like https://github.com/mapbox/cheap-ruler\n// https://www.geodatasource.com/developers/javascript\nexport function distance(lat1, lon1, lat2, lon2) {\n\tif ((lat1 === lat2) && (lon1 === lon2)) {\n\t\treturn 0;\n\t}\n\telse {\n\t\tvar radlat1 = Math.PI * lat1/180;\n\t\tvar radlat2 = Math.PI * lat2/180;\n\t\tvar theta = lon1-lon2;\n\t\tvar radtheta = Math.PI * theta/180;\n\t\tvar dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\t\tif (dist > 1) {\n\t\t\tdist = 1;\n\t\t}\n\t\tdist = Math.acos(dist);\n\t\tdist = dist * 180/Math.PI;\n\t\tdist = dist * 60 * 1.1515;\n\t\treturn dist;\n\t}\n}\n\n// checks for the closest marker on campus\n// if the closest marker exceeds the campus radius\n// then the user is not on campus\nexport function isOnCampus( position, markerData ) {\n\tconst distList = markerData.map( marker => {\t\t\n\t\treturn distance( position.coords.latitude, position.coords.longitude, marker.latitude, marker.longitude );\n\t});\n\treturn  Math.min(...distList) <= CAMPUS_RADIUS;\n}\n\nexport const isBaseHotspot = ({ isSubHotspot }) => {\n\treturn !isSubHotspot;\n}\n\n// TODO: this probably needs caches\n// and the logic should split markerData into basedHotspots and subHotspots\n// somethings like { basedHotspots: [], subHotspots: [] }\nexport const getSubHotspots = (markerData) => { \n\treturn markerData.filter(hotspot => { return !isBaseHotspot(hotspot) });\n};\nexport const getBaseHotspots = (markerData) => { \n\treturn markerData.filter(hotspot => { return isBaseHotspot(hotspot) });\n};\n\n// return all the children sub-hotspots of a baseHotspot\nexport const tooCloseHotspotList  = (hotspot, markerData, onCampus) => {\n\t// get all sub-hotspots\n\treturn getSubHotspots(markerData).filter(closeHotspot => {\n        if (hotspot && onCampus) {\n            const {latitude, longitude} = hotspot;\n            return latitude && longitude && Math.abs(distance(latitude, longitude, closeHotspot.latitude, closeHotspot.longitude)) <= HOTSPOT_RADIUS;\n        } // otherwise it's not a basehotspot\n        return false;\n    });\n};\n\nexport default {onPositionUpdate, isOnCampus, isBaseHotspot, getBaseHotspots, getSubHotspots, tooCloseHotspotList};",
        "import React, { useLayoutEffect, useState, useContext, useCallback } from 'react';\nimport { MapContainer as LeafletMap, TileLayer, Marker, CircleMarker, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport BackButton from '../../components/BackButton';\nimport { onPositionUpdate, isOnCampus, getBaseHotspots, tooCloseHotspotList } from \"./../../utils/gpsManager\";\nimport { Context } from \"./../../index\";\nimport './map.css';\n\nfunction Map(props) {\n  const [currentPos, setCurrentPos] = useState([]);\n  const [GeoError, setError] = useState(null);\n  const { onCampus, setOnCampus, markerData } = useContext(Context);\n\n  const initalRegion = {\n    lat: 41.150121,\n    lng: -81.345059,\n    zoom: 18\n  };\n  const position = [initalRegion.lat, initalRegion.lng];\n\n  // if the camera fails, we know they aren't able to run the AR\n  // so we set them off campus, even though they might be there\n  const checkCamera = useCallback(() => {\n    // check to see if the devices are undefine\n    if (!!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n      navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: process.env.NODE_ENV === 'production' ?\n          {\n            facingMode: {\n              exact: \"environment\" // the front camera, if prefered\n            }\n          } : {}\n      }).catch(err => {\n        setOnCampus(false);\n      });\n    } else {\n      setOnCampus(false);\n    }\n  }, [setOnCampus]);\n\n  //set the error value and log it to console\n  const setAndLogError = useCallback(err => {\n    // don't repeat errors\n    if (GeoError !== err) {\n      console.warn(err);\n      setError(err);\n    }\n  }, [GeoError]);\n\n  // create current postion point\n  const success = useCallback(pos => {\n    if (markerData.length > 0) onPositionUpdate(pos, props.history, markerData);\n    setOnCampus(isOnCampus(pos, markerData));\n    checkCamera();\n    // reset the error value as it worked\n    setError(null);\n    setCurrentPos([pos.coords.latitude, pos.coords.longitude]);\n  }, [setOnCampus, props.history, checkCamera, markerData]);\n\n  const error = useCallback(err => {\n    setCurrentPos([]);\n    // gps failed, so we just go to off-campus\n    setOnCampus(false);\n    setAndLogError('Error: The Geolocation service failed.');\n  }, [setOnCampus, setAndLogError]);\n\n\n  useLayoutEffect(() => {\n\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(success, error,\n        {\n          enableHighAccuracy: true,\n          timeout: Infinity,\n          maximumAge: 0\n        });\n    } else {\n      // Browser doesn't support Geolocation\n      setAndLogError('Error: Your browser doesn\\'t support geolocation.');\n    }\n  }, [success, error, setAndLogError, onCampus]);\n\n\n  return (\n    <React.Fragment>\n      <link rel=\"stylesheet\" href=\"//unpkg.com/leaflet@1.6.0/dist/leaflet.css\" />\n      <BackButton history={props.history} />\n      <LeafletMap center={position} zoom={initalRegion.zoom} currentPos={currentPos} >\n        <TileLayer\n          maxNativeZoom={19}\n          maxZoom={23}\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        <MarkerHotspots markerData={markerData} restrictedMarkersonCampus={onCampus} history={props.history} />\n        {currentPos.length > 0 && onCampus === true && (\n          <CircleMarker\n            title={\"Current Location\"}\n            className={\"userLocation\"}\n            zIndexOffset={1000}\n            fillOpacity={1}\n            color={\"#2C8ECE\"}\n            fillColor={\"white\"}\n            radius={7}\n            center={currentPos}\n          />\n        )}\n      </LeafletMap>\n    </React.Fragment>\n  );\n}\n\n\nconst MarkerHotspots = ({ markerData, onCampus, history }) => {\n\n  const map = useMap();\n\n  const adjustMap = useCallback(({ target }) => {\n    const bounds = target.getBounds();\n    map.fitBounds(bounds);\n    map.options.center = bounds.getCenter();\n    map.options.maxBounds = bounds;\n    map.options.minZoom = map.getZoom();\n  }, [map]);\n\n  const restrictedMarkers = onCampus ? getBaseHotspots(markerData) : markerData;\n\n  return (\n    <>\n      {markerData.length > 0 && <MarkerClusterGroup\n        showCoverageOnHover={false}\n        // if half of markersize (23 / 2) away then it is overlapping\n        maxClusterRadius={12}\n        eventHandlers={{\n          add: e => { adjustMap(e) }\n        }}\n      >\n        {restrictedMarkers.map(hotspot => {\n          const { position: key, latitude, longitude, name, pin_color } = hotspot;\n          const tooCloseHotspots = tooCloseHotspotList(hotspot, markerData, onCampus);\n          const IS_GROUPED_HOTSPOT = tooCloseHotspots.length > 0;\n          return (\n            <Marker\n              eventHandlers={{\n                click: () => {\n                  history.push(`/tour?name=${encodeURIComponent(name)}`)\n                }\n              }}\n              key={key}\n              zIndexOffset={-1}\n              title={name}\n              position={[latitude, longitude]}\n              icon={PointIcon(key.toString(), IS_GROUPED_HOTSPOT, pin_color)}\n            />\n          );\n        })}\n      </MarkerClusterGroup>}\n    </>\n  )\n};\n\n// TODO: This should formated the same naming as GEOJSON\nconst PointIcon = (id, IS_GROUPED_HOTSPOT = false, pinColor = undefined) => {\n  // if a color is set use it otherwise determine the default color\n  const color = pinColor ? pinColor : (IS_GROUPED_HOTSPOT ? \"00af91\" : \"add8e6\");\n  return new L.Icon({\n    // see more at https://developers.google.com/chart/image/docs/gallery/dynamic_icons#plain_pin\n    iconUrl: `https://chart.googleapis.com/chart?chst=d_map_spin&chld=.6|0|${color}|16|b|${id}`,\n    iconSize: [23, 41]\n  });\n}\n\nexport default Map;",
        "import React, { useContext, useRef } from 'react';\nimport { Context } from \"./../index\";\n\nconst AutoPlayer = React.memo(function AutoPlayer({ source, name, onLoad, onPause, onPlaying }) {\n\n    const controls = useRef(null);\n    const { modelOpen } = useContext(Context);\n\n    // mark audio finished an no-longer autoplay\n    const onEnd = () => {\n        localStorage.setItem(name + \"-audio\", 1);\n    };\n\n    const getAudioTime = () => {\n        return Math.floor(document.querySelector(\"#audio-player\").duration * 1000);\n    };\n\n    const autoPlay = (parseInt(localStorage.getItem(name + \"-audio\")) !== 1 && !modelOpen);\n\n    return (\n        <audio id=\"audio-player\"\n            controls={false}\n            autoPlay={autoPlay}\n            ref={controls}\n            onEnded={name ? onEnd : () => { }}\n            onLoadedMetadata={onLoad ? () => onLoad(getAudioTime()) : () => { }}\n            onPause={onPause ? () => { if (!controls.current.ended) onPause(); } : () => { }} // paused event can be triggered when onEnd, so ignore\n            onPlaying={onPlaying ? () => onPlaying() : () => { }}\n        >\n            <source id=\"mp3_src\" type=\"audio/mp3\" src={source} />\n            Your browser does not support the audio element.\n        </audio>\n    );\n});\n\nexport default AutoPlayer;\n",
        "import React, { useContext, useState } from 'react';\nimport Modal from 'react-modal';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes, faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink } from 'react-router-dom';\nimport { Frame, Stack } from 'framer'\nimport { useCookie } from \"react-use\";\nimport './Menu.scss';\nimport { Context } from \"./../../index\";\nimport { isBaseHotspot } from \"./../../utils/gpsManager\";\n\nModal.setAppElement('#root');\nlibrary.add(faBars, faTimes, faBell);\n\n\nfunction MenuOverlay({ children, data }) {\n    const [visitedLibrary, setCookie] = useCookie(\"VisitedLibrary\");\n    function setVisited() {\n        setCookie(true);\n    }\n\n    const { modelOpen, toggleModel, onCampus } = useContext(Context);\n\n\n    const { media_pages, main_pages, name } = data;\n\n    const HAS_LIBRARY_ITEMS = false;\n    const IS_GROUPED_HOTSPOT = isBaseHotspot(data) && onCampus;\n\n    return (\n        <React.Fragment>\n            <Modal\n                isOpen={modelOpen}\n                contentLabel=\"Menu Content\"\n                className=\"Modal\"\n                overlayClassName=\"Overlay\"\n                closeTimeoutMS={250}\n                aria-expanded={modelOpen}\n            >\n                <div className=\"menu-content\">\n                    <p className=\"menu-title\">Menu</p>\n                    <div className=\"menu-ctn\">\n                        <MenuComponent\n                            name={name}\n                            pages={main_pages} />\n                        <div className={[\"media-menu\", HAS_LIBRARY_ITEMS ? \"library-full\" : \"library-empty\"].join(' ')}>\n                            {HAS_LIBRARY_ITEMS && <NavLink\n                                to={`${process.env.PUBLIC_URL}/media?name=${encodeURIComponent(name)}`}\n                                className=\"menu-item\"\n                                onClick={() => { setVisited(); }}>\n                                Library\n                        </NavLink>\n                            }\n                            <NavLink\n                                to={`${process.env.PUBLIC_URL}/help`}\n                                className=\"menu-item-last\">\n                                Help\n                        </NavLink>\n                        </div>\n                    </div>\n                </div>\n                <div style={styles.closeBtn}>\n                    <FontAwesomeIcon\n                        className={[\"overlay-icon\", \"closeBtn\"].join(' ')}\n                        icon={faTimes}\n                        onClick={() => toggleModel(false)}\n                    />\n                </div>\n            </Modal>\n            <div id=\"overlay-content\">\n                <div style={styles.overlayBtn}>\n                    <FontAwesomeIcon\n                        className=\"overlay-icon\"\n                        icon={faBars}\n                        onClick={() => toggleModel(!modelOpen)}\n                    />\n                </div>\n                {children}\n            </div>\n\n            <NotificationSystem visitedLibrary={visitedLibrary} HAS_LIBRARY_ITEMS={HAS_LIBRARY_ITEMS} IS_GROUPED_HOTSPOT={IS_GROUPED_HOTSPOT} />\n\n        </React.Fragment>\n    );\n}\n\n\nconst NotificationSystem = ({ visitedLibrary, HAS_LIBRARY_ITEMS, IS_GROUPED_HOTSPOT }) => {\n    const [istoggled, setState] = useState(false);\n    const toggleHotspot = () => {\n        setState(state => !state);\n    }\n    const [flash, setAnimation] = React.useState(0)\n\n    const LIBRARY_EXISTS = (HAS_LIBRARY_ITEMS && !visitedLibrary);\n    const GROUP_HOTSPOT_EXISTS = IS_GROUPED_HOTSPOT;\n    const ONE_NOTIFICATIONS_EXIST = LIBRARY_EXISTS || GROUP_HOTSPOT_EXISTS;\n    const BOTH_NOTIFICATIONS_EXIST =  LIBRARY_EXISTS && GROUP_HOTSPOT_EXISTS;\n\n    return (\n        <>\n            { ONE_NOTIFICATIONS_EXIST &&\n                <Stack>\n                    <Frame\n                        width={\"100px\"} height={\"100px\"} top={15} right={-15} position={\"fixed\"} style={styles.overlayBtnAlert}\n                        onTapStart={toggleHotspot} className={\"HotspotOverlay\"} onClick={() => setAnimation(1)} onAnimationEnd={() => setAnimation(0)}\n                        flash={flash}\n                    >\n                        <FontAwesomeIcon\n                            className=\"overlay-ctn-notification\"\n                            icon={faBell}\n                        />\n                        <Frame\n                            style={styles.overlayBtnAlert1} top={15} right={90} width={\"350px\"}\n                        >\n                            <div className=\"hotspotdialog\" style={{ display: istoggled ? 'block' : 'none' }} >\n                                {GROUP_HOTSPOT_EXISTS && <>\n                                    <h3>Check out the other Hotspot Locations!</h3>\n                                    <p>Make sure to check out the other hotspot locations in order to gain the full experience, along with their rich library content found under the menu bar.</p>\n                                </>}\n                                {BOTH_NOTIFICATIONS_EXIST && <hr />}\n                                {LIBRARY_EXISTS && <>\n                                    <h3>Check out the Library!</h3>\n                                    <p>including photos, audio, and content regarding each of the hotspot. The library option can be found under the Menu bar on the upper left hand corner of the screen.</p>\n                                </>}\n                            </div>\n                        </Frame>\n                    </Frame>\n                </Stack>\n            }\n        </>\n    );\n};\n\nconst MenuComponent = React.memo(function MenuComponent({ name, pages = [] }) {\n    const { toggleModel } = useContext(Context);\n    const handleClick = () => {\n        toggleModel(false);\n    };\n    return (\n        <div className=\"navigation-menu\">\n            {pages.map((media, index) => {\n                return (\n                    <NavLink\n                        to={`${process.env.PUBLIC_URL}/main?name=${encodeURIComponent(name)}&type=${encodeURIComponent(media.title)}`}\n                        onClick={() => handleClick()}\n                        className={pages.length === index + 1 ? \"menu-item-last\" : \"menu-item\"}\n                        key={index}\n                    >\n                        { media.title}\n                    </NavLink>\n                );\n            })}\n        </div>\n    );\n});\n\nconst styles = {\n    overlayBtnAlert: {\n        position: \"fixed\",\n        backgroundColor: \"none\",\n        zIndex: 11,\n    },\n    overlayBtnAlert1: {\n        position: \"fixed\",\n        backgroundColor: \"none\",\n        zIndex: 10,\n    },\n    overlayBtn: {\n        position: \"fixed\",\n        left: \".5em\",\n        top: \".5em\",\n        zIndex: 10\n    },\n    closeBtn: {\n        position: \"fixed\",\n        top: \".5em\",\n        right: \".5em\"\n    }\n};\n\nexport default MenuOverlay;",
        "\n\nimport { useFrame, useThree } from \"@react-three/fiber\";\n\nconst AnimateCamera = ({ isRotating, setIsRoating }) => {\n\n    const { camera } = useThree();\n\n    useFrame(() => {\n        if (isRotating) {\n            camera.position.set(0, 0, 1)\n            setIsRoating(false);\n        }\n    })\n\n    return(null)\n};\n\nexport { AnimateCamera };",
        "import React, { useEffect, useState, useContext, Suspense, useRef } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { Ellipsis } from 'react-spinners-css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faEye, faChevronRight, faChevronLeft, faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport { useLocation } from \"react-router-dom\";\nimport { Html, useProgress } from '@react-three/drei'\nimport AudioPlayer from \"./../../components/AutoPlayer\";\nimport MenuOverlay from \"../../components/Menu/MenuOverlay\";\nimport { Context } from \"./../../index\";\nimport { AnimateCamera } from \"./AnimateCamera\"\nimport { getBaseHotspots, tooCloseHotspotList } from \"./../../utils/gpsManager\";\nimport './tours.css';\n\nimport { useLoader } from '@react-three/fiber';\nimport { OrbitControls, DeviceOrientationControls, useGLTF} from '@react-three/drei'\nimport { TextureLoader, FrontSide, Vector3 } from 'three';\n\nlibrary.add(faMapMarkerAlt, faEye, faChevronRight, faChevronLeft, faBell);\n\nfunction handleVideo(video) {\n\n    // Older browsers might not implement mediaDevices at all, so we set an empty object first\n    if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n    }\n\n    // Some browsers partially implement mediaDevices. We can't just assign an object\n    // with getUserMedia as it would overwrite existing properties.\n    // Here, we will just add the getUserMedia property if it's missing.\n    if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n            // First get ahold of the legacy getUserMedia, if present\n            var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n            // Some browsers just don't implement it - return a rejected promise with an error\n            // to keep a consistent interface\n            if (!getUserMedia) {\n                return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n            }\n\n            // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n            return new Promise(function (resolve, reject) {\n                getUserMedia.call(navigator, constraints, resolve, reject);\n            });\n        }\n    }\n\n    // this gets the camera \n    navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: process.env.NODE_ENV === 'production' ?\n            {\n                facingMode: {\n                    exact: \"environment\" // the front camera, if prefered\n                }\n            } : {}\n    }).then(stream => {\n        if (stream) {\n\n            // Older browsers may not have srcObject\n            if (\"srcObject\" in video.current) {\n                video.current.srcObject = stream;\n            } else {\n                // Avoid using this in new browsers, as it is going away.\n                video.current.src = window.URL.createObjectURL(stream);\n            }\n\n            // play the video stream\n            video.current.onloadedmetadata = function (e) {\n                video.current.play();\n            };\n\n        } else {\n            console.warn(\"Missing auto stream\");\n        }\n\n    })\n        .catch(function (err) {\n            console.warn(err);\n        });\n}\n\nconst SphereOverlay = ( {tourBasePath, overlay} ) => {\n    const texture = useLoader(TextureLoader, tourBasePath + overlay);\n\n    return (\n        <>\n        {texture &&\n        <group dispose={null}>\n            <mesh>\n            { /* only render the material if we have the overlay */}\n                <sprite scale={[1/2, 1/2]}>\n                    <spriteMaterial attach=\"material\" map={texture} />\n                </sprite>\n            </mesh>\n        </group>\n        }\n        </>\n    );\n};\n\nconst SphereMapAR = React.memo(({ data, video, tourBasePath }) => {\n    const { overlay, virtual_object } = data;\n\n    useEffect(() => {\n       handleVideo(video);\n    }, [video]);\n\n    return (\n        <>\n            { !!overlay && <SphereOverlay overlay={overlay} tourBasePath={tourBasePath} /> }\n            { !!virtual_object && <VirtualObject virtual_object={virtual_object} tourBasePath={tourBasePath} />}\n            <DeviceOrientationControls />\n        </>\n    );\n});\n\nconst VirtualObject = ({ tourBasePath, virtual_object }) => {\n    const { nodes, materials } = useGLTF(tourBasePath + virtual_object, true);\n    return (\n        <group dispose={null} position={[0, 0, -5]}>\n            <mesh\n                material={materials[\"Material.001\"]}\n                geometry={nodes.Scene.children[0].geometry}\n            />\n        </group>\n    );\n};\n\n\nconst OverlayVR = ({ data, tourBasePath }) => {\n    const { overlay_size = 10, overlay_offset_x = 0, overlay_offset_y = 0, overlay } = data;\n    const texture = useLoader(TextureLoader, tourBasePath + overlay);\n  \n    return (\n      <mesh position={[overlay_offset_x, overlay_offset_y, -9]}>\n        {/* only show the backside of texture and rotate it to the front\n              * this is like setting the scale [-1, 1, 1]  */}\n        <planeGeometry attach=\"geometry\" args={[overlay_size, overlay_size]} />\n        <meshBasicMaterial attach=\"material\" map={texture} side={FrontSide} />\n      </mesh>\n    );\n  \n  };\n  \n  \n  const CubeMap = ({ panorama_image, tourBasePath }) => {\n  \n    const texture = useLoader(TextureLoader, tourBasePath + panorama_image);\n  \n    // Begin shaders to add mipmaps, remove seams, and convert to cubemap\n    const vertexShader = `\n    varying vec3 worldPosition;\n    void main () {\n      vec4 p = vec4 (position, 1.0);\n      worldPosition = (modelMatrix * p).xyz;\n      gl_Position = projectionMatrix * modelViewMatrix * p;\n    }`\n  \n    const fragmentShader = `\n    uniform sampler2D map;\n    uniform vec3 placement;\n    varying vec3 worldPosition;\n    const float seamWidth = 0.01;\n    void main () {\n      vec3 R = worldPosition - placement;\n      float r = length (R);\n      float c = -R.y / r;\n      float theta = acos (c);\n      float phi = atan (R.x, -R.z);\n      float seam = \n        max (0.0, 1.0 - abs (R.x / r) / seamWidth) *\n        clamp (1.0 + (R.z / r) / seamWidth, 0.0, 1.0);\n      gl_FragColor = texture2D (map, vec2 (\n        0.5 + phi / ${2 * Math.PI},\n        theta / ${Math.PI}\n      ), -2.0 * log2(1.0 + c * c) -12.3 * seam);\n    }`\n  \n    const uniforms = {\n      map: {\n        type: 't', value: texture\n      },\n      placement: {\n        type: 'v3', value: new Vector3()\n      }\n    }\n  \n    // end shader content\n  \n    return (\n      <mesh>\n        {/*Inverse on z axis to make cubemap\n            * this is like setting the scale [1, 1, -1]  */}\n        <boxGeometry attach=\"geometry\" args={[20, 20, -20]} />\n        <shaderMaterial attach=\"material\" uniforms={uniforms} fragmentShader={fragmentShader} vertexShader={vertexShader} />\n      </mesh>\n    )\n  }\n  \n  \n  const CubeMapVR = React.memo(({ data, tourBasePath }) => {\n    const { panorama_image, overlay, virtual_object } = data;\n  \n    return (\n      <>\n        <group dispose={null}>\n          { !!panorama_image && <CubeMap panorama_image={panorama_image} tourBasePath={tourBasePath} />}\n          { !!overlay && <OverlayVR data={data} tourBasePath={tourBasePath} />}\n        </group>\n        { !!virtual_object && <VirtualObject virtual_object={virtual_object} tourBasePath={tourBasePath} />}\n        <OrbitControls\n          enablePan={false}\n          enableDamping\n          minDistance={1}\n          maxDistance={3}\n        />\n      </>\n    );\n  });\n    \nconst Loader = () => {\n    const { active } = useProgress();\n    if (active) {\n        return (\n            <Html center>\n                <Ellipsis className=\"spinner\" color=\"#fff\" />\n            </Html>\n        )\n    } else return null\n};\n\nconst Tour = ({ history}) => {\n    \n    const query = new URLSearchParams(useLocation().search);\n    const INITIAL_STATE = { name: \"\", start_audio: \"\" };\n\n    const { onCampus, markerData, tourBasePath } = useContext(Context);\n    const [StorageData, setStoredData] = useState(INITIAL_STATE);\n    const { name, start_audio } = StorageData;\n\n    const [isRotating, setIsRoating] = useState(false);\n\n    const videoRef = useRef();\n\n    function scrollToTop() {\n        window.scrollTo(0, 0);\n        window.scrollTo(0, 1);\n    }\n\n    function scrollToBottom() {\n        window.scrollTo(0, document.body.scrollHeight);\n    }\n\n    const isWindowContext = typeof window !== \"undefined\";\n\n    useEffect(() => {\n        const markerName = query.get(\"name\");\n        const data = markerData.filter(marker => marker.name === markerName).pop();\n        // if data hasn't loaded yet, it'll be undefined. So ignore it then and wait for it to load\n        if (typeof data !== 'undefined') {\n            // we make sure there exists INITIAL_STATE if they don't exist in the data\n            const mutatedData = { ...INITIAL_STATE, ...data };\n            if (JSON.stringify(StorageData) !== JSON.stringify(mutatedData)) setStoredData(mutatedData)\n        }\n        if (isWindowContext) {\n            // used to get rid of the bar in safari\n            scrollToTop();\n            scrollToBottom();\n        }\n    }, [markerData, query, StorageData, INITIAL_STATE, isWindowContext]);\n\n    return (\n        <div id=\"container\" style={{ overflow: \"hidden\" }}>\n            <MenuOverlay data={StorageData}>\n\n                {onCampus && (<video ref={videoRef} autoPlay={true} muted playsInline id=\"videoElement\" />)}\n\n                <Canvas id=\"canvas\" camera={{ position: [0, 0, 1], fov: 45 }}>\n                    <directionalLight position={[0.5, 0, 0.866]} />\n                    <Suspense fallback={<Loader />}>\n                        {onCampus ?\n                            <SphereMapAR data={StorageData} video={videoRef} tourBasePath={tourBasePath} /> :\n                            <CubeMapVR data={StorageData} tourBasePath={tourBasePath} />\n                        }\n                        <AnimateCamera isRotating={isRotating} setIsRoating={setIsRoating} />\n                    </Suspense>\n                </Canvas>\n\n                <HotspotController baseName={query.get(\"name\")} handleData={setStoredData} data={StorageData} markerData={markerData} onCampus={onCampus}/>\n\n                <div id=\"fixed-footer\">\n                    <AudioPlayer name={name} source={tourBasePath + start_audio} />\n                </div>\n\n                <div className=\"overlay-ctn-show\">\n                    <FontAwesomeIcon\n                        className=\"overlay-icon\"\n                        icon={faEye}\n                        onClick={() => setIsRoating(true)}\n                    />\n                </div>\n                <div className=\"overlay-ctn-map\">\n                    <FontAwesomeIcon\n                        className=\"overlay-icon\"\n                        icon={faMapMarkerAlt}\n                        onClick={() => history.replace(\"/map\")}\n                    />\n                </div>\n            </MenuOverlay>\n        </div>\n    );\n};\n\nconst HotspotController = ({ baseName, data, handleData, markerData, onCampus }) => {\n\n    const [hostspotIndex, setHostspotIndex] = useState(0);\n\n    //TODO: Sound add a system in markers.json to pick what is a \"basestation\"\n    // it can find the points that are too close and let you pick one to be the base\n\n    // the hotspots that act as the starting node\n    const baseHotspots = getBaseHotspots(markerData);\n\n    const baseHotspot = baseHotspots.filter(marker => marker.name === baseName).pop();\n\n    const locationQueue = tooCloseHotspotList(baseHotspot, markerData, onCampus);\n\n    const CAN_USE_QUEUE = ( locationQueue.length > 0 && hostspotIndex !== 0);\n    \n    const HAS_RIGHT_DATA = hostspotIndex < locationQueue.length;\n    const HAS_LEFT_DATA = hostspotIndex > 0;\n    const { name } = CAN_USE_QUEUE ? locationQueue[hostspotIndex - 1] : data;\n\n    const handleLocation = direction => {\n        if(direction === \"next\" &&  HAS_RIGHT_DATA) {\n            setHostspotIndex(currentIndex => {\n                const nextIndex = currentIndex + 1;\n                handleData( locationQueue[currentIndex] );\n                return nextIndex;\n            });\n        } else if (direction === \"back\" && HAS_LEFT_DATA) {\n            setHostspotIndex(currentIndex => {\n                const previousIndex = currentIndex - 1;\n                handleData( CAN_USE_QUEUE ? locationQueue[previousIndex] : data);\n                return previousIndex;\n            });\n            \n        }\n    }\n    \n    return (\n        <div className=\"hotspotControls\">\n            {locationQueue.length > 0 && HAS_LEFT_DATA && (<div className=\"control-left\">\n                <FontAwesomeIcon\n                    className=\"overlay-icon\"\n                    icon={faChevronLeft}\n                    onClick={() => {handleLocation(\"back\")}}\n                />\n            </div>)}\n            <div onSelect={e => e.preventDefault()} id=\"title-ctn\" >\n                { name }\n            </div>\n            {locationQueue.length > 0 && HAS_RIGHT_DATA && (<div className=\"control-right\">\n                <FontAwesomeIcon\n                    className=\"overlay-icon\"\n                    icon={faChevronRight}\n                    onClick={() => {handleLocation(\"next\")}}\n                />\n            </div>)}\n        </div>\n    )\n};\n\nexport default Tour;\n\n\n",
        "import React, { useEffect, useContext, useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, DotGroup } from 'pure-react-carousel';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport BackButton from '../../components/BackButton';\nimport './media.css';\nimport { Context } from \"./../../index\";\n\n\nlibrary.add(faChevronLeft, faChevronRight);\n\nfunction Media(props) {\n    let query = new URLSearchParams(useLocation().search);\n    let name = query.get(\"name\");\n    let type = query.get(\"type\");\n\n    const [content, setContent] = useState([]);\n\n    const { markerData, tourBasePath } = useContext(Context);\n\n\n\n    useEffect(() => {\n        // remove the image from loading in from the homepages\n        document.body.classList.add(\"no-image\");\n        return () => { document.body.classList.remove(\"no-image\"); }\n\n    });\n\n    useEffect(() => { // to set the content \n        const { media_pages } = markerData.filter(marker => marker.name === name).pop() || { media_pages: [] };\n        if (JSON.stringify(media_pages) !== JSON.stringify(content)) setContent(media_pages);\n    }, [content, markerData, name]);\n\n    return (\n        <main>\n            <h1 className=\"header\">Library</h1>\n            <Accordion>\n                {content.map(media => {\n                    if (type === null || type === media.title) {\n                        return (\n                            <AccordionItem allowZeroExpanded={true}>\n                                <div className=\"text\">\n                                    <AccordionItemHeading>\n                                        <AccordionItemButton id=\"title\">\n                                            {media.title}\n                                        </AccordionItemButton>\n                                    </AccordionItemHeading>\n                                    <AccordionItemPanel>\n                                        {media.title === \"Pictures\" ? (\n                                            <CarouselProvider\n                                                naturalSlideWidth={100}\n                                                naturalSlideHeight={100}\n                                                infinite\n                                                totalSlides={media.content_items.length}\n                                            >\n                                                <Slider>\n                                                    {media.content_items.map((content, index) => {\n                                                        return (\n                                                            <PictureContent URL={content.item} description={content.item_description} index={index} tourBasePath={tourBasePath} />\n                                                        )\n                                                    })}\n                                                </Slider>\n                                                <DotGroup />\n                                                <ButtonBack>\n                                                    <FontAwesomeIcon\n                                                        className={\"back-icon\"}\n                                                        icon={faChevronLeft}\n                                                    />\n                                                </ButtonBack>\n                                                <ButtonNext>\n                                                    <FontAwesomeIcon\n                                                        className={\"next-icon\"}\n                                                        icon={faChevronRight}\n                                                    />\n                                                </ButtonNext>\n                                            </CarouselProvider>) : (\n                                                (media.content_items.map(content => {\n                                                    return (<LinksContent URL={content.item} description={content.item_description} />)\n                                                }))\n                                            )}\n                                    </AccordionItemPanel>\n                                </div>\n                            </AccordionItem>\n                        );\n                    }\n                    return null;\n                })}\n            </Accordion>\n            <BackButton history={props.history} />\n        </main>\n    )\n}\n\nfunction PictureContent({ URL, description, index, tourBasePath }) {\n    return (\n        <Slide index={index}>\n            <p>{description}</p>\n            <img src={tourBasePath + URL} alt={description} />\n        </Slide>\n    );\n}\n\n\nfunction LinksContent(props) {\n    return (\n        <React.Fragment>\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={props.URL} alt={props.description}>\n                {props.description}\n            </a>\n        </React.Fragment>\n    );\n}\n\nexport default Media;\n",
        "import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport BackButton from '../../components/BackButton';\nimport AudioPlayer from \"./../../components/AutoPlayer\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { Frame, useAnimation } from 'framer'\nimport \"./main.scss\"\nimport { Context } from \"./../../index\";\n\nlibrary.add(faTimes);\n\nconst Main = ({ history }) => {\n    const query = new URLSearchParams(useLocation().search);\n    const name = query.get(\"name\");\n    const type = query.get(\"type\");\n\n    const [content, setContent] = useState([]);\n\n\n    const [audioTime, setAudioTime] = useState(0);\n    const [isFaded, setFaded] = useState(false);\n\n    const { markerData, tourBasePath } = useContext(Context);\n\n    const controls = useAnimation();\n\n    const FADE_MULTIPLIER = 1.3; // 130% to make content readable before it is completely gone\n\n    // TODO: figure how to do onRestart for audio and to set opacity back to inital\n\n    const handleFade = (time) => {\n        controls.start({\n            opacity: 0,\n            transition: { duration: time / 1000 }, // make everything in terms of a milliseconds\n        }).then(() => setFaded(true))\n    }\n\n    const startFade = () => {\n        handleFade(audioTime * FADE_MULTIPLIER);\n    }\n\n    const stopFade = () => {\n        controls.stop();\n    }\n\n    useEffect(() => {\n        // remove the image from loading in from the homepages\n        document.body.classList.add(\"scrollable-body\");\n        return () => {\n            document.body.attributes.removeNamedItem(\"style\");\n            document.body.classList.remove(\"scrollable-body\");\n        }\n    }, []); // ignore rerun from fade state update\n\n    useEffect(() => { // to set the content \n        const { main_pages } = markerData.filter(marker => marker.name === name).pop() || { main_pages: [] };\n        if (JSON.stringify(main_pages) !== JSON.stringify(content)) setContent(main_pages);\n    }, [content, markerData, name]);\n\n    return (\n        <React.Fragment>\n            {content.map((main, index) => {\n                if (type === main.title) {\n                    document.body.style.backgroundImage = 'url(' + tourBasePath + main.background_image + ')';\n                    return (\n                        <main key={index}>\n                            <FontAwesomeIcon\n                                className={[\n                                    \"overlay-icon\", \"closeBtn\",\n                                    isFaded ? \"hidden\" : \"visible\"\n                                ].join(' ')}\n                                icon={faTimes}\n                                onClick={() => {\n                                    handleFade(200);\n                                }}\n                            />\n                            <Frame\n                                position={\"relative\"}\n                                animate={controls}\n                                className={[\n                                    \"textCtn\",\n                                    isFaded ? \"hidden\" : \"visible\"\n                                ].join(' ')}\n                                initial={{\n                                    opacity: 1,\n                                    width: 'auto'\n                                }}\n                                exit={{ opacity: 0 }}\n                            >\n                                <h1 id=\"title\">{main.title}</h1>\n                                <p id=\"text\">{main.description}</p>\n                            </Frame>\n                            <AudioPlayer \n                                source={tourBasePath + main.descriptive_audio} \n                                onLoad={time => setAudioTime(time)} onPause={stopFade} onPlaying={startFade} \n                            />\n                            <BackButton history={history} />\n                        </main>\n                    );\n                }\n                return null;\n            })}\n\n        </React.Fragment>\n    );\n\n};\n\nexport default Main;\n",
        "\nimport React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { useHowl, Play } from 'rehowl';\nimport { useHistory } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faMapMarkerAlt, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { Context } from \"./../../index\";\nimport \"./intro.scss\";\n\nlibrary.add(faBars, faMapMarkerAlt, faEye);\n\nfunction Intro() {\n    let history = useHistory();\n    const [stepNum, SetStepNum] = useState(0);\n    const IntroCount = parseInt(localStorage.getItem(\"introCount\"));\n    const { onCampus, setOnCampus } = useContext(Context);\n    const [StepData, setStepData] = useState([]);\n    const audioPrefix = onCampus ? \"_inSitu\" : \"_remote\";\n    const { howl } = useHowl({ src: process.env.PUBLIC_URL + '/audio/intro/' + (stepNum + 1) + audioPrefix + '.m4a', html5: true })\n\n\n    const handleFinish = useCallback(() => {\n        localStorage.setItem(\"introCount\", StepData.length);\n        history.replace(\"/map\");\n    }, [StepData.length, history]);\n\n    const checkCamera = useCallback(() => {\n        // check to see if the devices are undefine\n        if (!!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n            navigator.mediaDevices.getUserMedia({\n                audio: false,\n                video: process.env.NODE_ENV === 'production' ?\n                    {\n                        facingMode: {\n                            exact: \"environment\" // the front camera, if prefered\n                        }\n                    } : {}\n                // if constains don't pass for camera and is production - it isn't on campus\n            }).catch(err => {\n                setOnCampus(false);\n            });\n        } else {\n            setOnCampus(false);\n        }\n    }, [setOnCampus]);\n\n    const checkPos = useCallback(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.watchPosition(() => setOnCampus(true), () => setOnCampus(false),\n                {\n                    enableHighAccuracy: true,\n                    timeout: Infinity,\n                    maximumAge: 0\n                });\n        } else {\n            setOnCampus(false);\n        }\n    }, [setOnCampus]);\n\n\n    const handleBack = () => {\n        if (stepNum > 0) {\n            var count = stepNum - 1;\n            SetStepNum(count);\n            localStorage.setItem(\"introCount\", count);\n        } else {\n            history.push(\"/\");\n        }\n    };\n\n    const handleNext = () => {\n        var count = stepNum + 1;\n        if (StepData.length - 1 > stepNum) {\n            SetStepNum(count);\n            localStorage.setItem(\"introCount\", count);\n        } else {\n            // finished \n            handleFinish();\n        }\n\n    };\n\n    const addIcons = (text) => {\n        const pattern = /(\\[icon\\])/g;\n        const splitText = text.split(pattern);\n        const matches = text.match(pattern);\n\n        return splitText.reduce((arr, element) => {\n            if (!element) return arr;\n\n            if (matches.includes(element)) {\n                return [...arr, StepData[stepNum].icon];\n            }\n\n            return [...arr, element];\n        });\n    };\n\n    useEffect(() => {\n        document.body.classList.add(\"IntroPage\");\n        document.body.style.setProperty('--intro-background',\n            \"url(\" + process.env.PUBLIC_URL + \"/../../images/intro/Background_Tile.png)\"\n        );\n        checkPos();\n        checkCamera();\n        setStepData(onCampus ? StepsMobile : Steps360)\n        // incase a user leaves and wants to come back\n        if (IntroCount > 0 && StepData.length > 0) {\n            // make sure they aren't finished\n            if (IntroCount >= StepData.length)\n                handleFinish();\n            else\n                SetStepNum(IntroCount);\n        }\n        return () => document.body.classList.remove(\"IntroPage\");\n    }, [StepData, onCampus, IntroCount, checkCamera, checkPos, handleFinish]);\n\n    if (StepData.length > 0 && StepData.length > stepNum)\n        return (\n            <div className=\"intro\">\n                <Play howl={howl} />\n                <h1 className=\"title\">Step {stepNum + 1}</h1>\n                {StepData.length - 1 > stepNum && (<p className=\"skipBtn\" onClick={handleFinish}>skip</p>)}\n                <div className=\"content\">\n                    <img className=\"icons\" alt=\"icon\" src={process.env.PUBLIC_URL + \"/images/intro/\" + StepData[stepNum].image} />\n                    <p className=\"description\">{addIcons(StepData[stepNum].description)}</p>\n                </div>\n                <button onClick={handleBack} className=\"btn-back\">Back</button>\n                <button onClick={handleNext} className=\"btn-next\">{StepData.length - 1 > stepNum ? \"Next\" : \"Begin Tour\"}</button>\n            </div>\n        );\n    else\n        return (<React.Fragment>Loading...</React.Fragment>)\n}\n\nconst StepsMobile = [\n    {\n        description: \"Turn the volume up on your device.\",\n        image: \"Step1.png\"\n    },\n    {\n        description: \"Use the map to navigate to each hotspot. If the map does not come up automatically, you can get there by clicking the [icon] icon.\",\n        icon: <FontAwesomeIcon color={\"white\"} icon={faMapMarkerAlt} />,\n        image: \"Step2.png\"\n    },\n    {\n        description: \"After arriving at the hotspot locate the foot-guide on the ground and point your camera in the direction indicated.\",\n        image: \"Step3.png\"\n    },\n    {\n        description: \"After pointing your camera in  the instructed direction, click on the [icon] icon to generate augmented images on the screen, and listen for the audio clip.\",\n        icon: <FontAwesomeIcon color={\"white\"} icon={faEye} />,\n        image: \"Step4.png\"\n    },\n    {\n        description: \"After each hotspot you can find more information unique to that location by clicking on the [icon] icon and viewing each menu item.\",\n        icon: <FontAwesomeIcon color={\"white\"} icon={faBars} />,\n        image: \"Step5.png\"\n    }\n];\n\nconst Steps360 = [\n    StepsMobile[0],\n    {\n        description: \"Click on each hotspot [icon] on the map to access augmented reality images and information about the site.\",\n        icon: <FontAwesomeIcon color={\"white\"} icon={faMapMarkerAlt} />,\n        image: \"Step2-remote.png\"\n    },\n    {\n        description: \"Each hotspot shows an historical image, displayed on a 360 image from today. You can use your mouse to look around the picture. Use the various icons to access additional information or to return to the map.\",\n        image: \"Step3-remote.png\"\n    }\n];\n\n\nconst HelpElement = ({ description, icon, index }) => {\n    const pattern = /(\\[icon\\])/g;\n    const matchText = description.match(pattern);\n\n    return (<li key={index} >\n        {description.split(pattern)\n            .reduce((accumulator, currentValue) => {\n                // if no icon return the text\n                if (!icon) return accumulator;\n\n                // if current frament is the [icon]\n                if (matchText.includes(currentValue))\n                    // convert to a JS Element\n                    return [<>{accumulator}{icon}</>];\n                else\n                    // if not [icon just add the text]\n                    return [...accumulator, currentValue];\n            }\n            )}\n    </li>);\n}\n\nexport const ProcessedSteps = () => {\n    const { onCampus } = useContext(Context);\n    const StepData = onCampus ? StepsMobile : Steps360;\n    return StepData.map((step, index) => {\n        return (\n            <HelpElement {...step} index={index} key={index} />\n        )\n    });\n}\n\nexport default Intro;",
        "import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Error404() {\n    return (\n        <React.Fragment>\n            <h1>404 Not found</h1>\n            <Link to=\"/\"><p>Please considering going back to the homepage.</p></Link>\n        </React.Fragment>\n    );\n}\n\nexport default Error404;\n",
        "import React, { useEffect, useContext } from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport {ProcessedSteps} from './../intro/Intro';\nimport './help.scss'\nimport { Context } from '../../index';\n\nlibrary.add(faTimes);\n\nfunction Help({ history }) {\n\n    const { onCampus, setOnCampus } = useContext(Context);\n\n    useEffect(() => {\n        document.body.classList.add(\"help-body\");\n\n        return () => {\n            document.body.classList.remove(\"help-body\");\n        }       \n    }, []);\n    return (\n        <React.Fragment>\n            <h1 className=\"title\">Help</h1>\n            <h2 className=\"subtitle\">How to Use the Augmented Reality Tour</h2>\n            <ol className=\"rules\" type=\"1\">\n                <ProcessedSteps />\n            </ol>\n            {process.env.NODE_ENV !== 'production' && <>\n                <label className=\"debug\">\n                Emulate On-Campus Experience:\n                <input\n                    name=\"isOnCampus\"\n                    type=\"checkbox\"\n                    checked={onCampus}\n                    onChange={()=> setOnCampus(isOnCampus => !isOnCampus)}\n                />\n                </label>\n            </>}\n            <FontAwesomeIcon \n                className={[\"overlay-icon\", \"closeBtn\"].join(' ')}\n                icon={faTimes}\n                onClick={() => history.goBack()}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default Help;",
        "import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nconst { ga_tracking_id } =  JSON.parse(localStorage.getItem(\"markerData\")) || { ga_tracking_id: \"\" };\n\nif (ga_tracking_id && process.env.NODE_ENV === 'production') ReactGA.initialize(ga_tracking_id);\n\nconst withTracker = (WrappedComponent, options = { debug: true}) => {\n  const trackPage = page => {\n    ReactGA.set({\n      page,\n      ...options\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = props => {\n    useEffect(() => trackPage(props.location.pathname), [\n      props.location.pathname\n    ]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return HOC;\n};\n\nexport default withTracker;",
        "import React from 'react';\nimport Home from './pages/index/Home';\nimport Map from './pages/map/Map';\nimport Tour from './pages/tour/Tour';\nimport Media from './pages/media/Media';\nimport Main from \"./pages/main/Main\";\nimport Intro from \"./pages/intro/Intro\";\nimport Error404 from \"./pages/error/Error404\";\nimport Help from \"./pages/help/Help\";\nimport withTracker from './utils/withTracker';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\n    return (\n        <main>\n            <Switch>\n                <Route path={\"/\"} component={withTracker(Home)} exact />\n                <Route path={\"/map\"} component={withTracker(Map)} exact />\n                <Route path={\"/tour\"} component={withTracker(Tour)} exact />\n                <Route path={\"/media\"} component={withTracker(Media)} exact/>\n                <Route path={\"/main\"} component={withTracker(Main)} exact />\n                <Route path={\"/help\"} component={withTracker(Help)} exact />\n                <Route path={\"/intro\"} component={withTracker(Intro)} exact />\n                <Route component={Error404} />\n            </Switch>\n        </main>\n    )\n}\n\nexport default App;\n",
        "const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}",
        "import React, { useState, useEffect, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, useLocation } from \"react-router-dom\"\nimport * as serviceWorker from './utils/serviceWorker';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useTitle } from 'react-use';\n\nexport const Context = React.createContext();\n\n\nfunction Provider({ children }) {\n    // controls if VR or AR is being provided\n    const [onCampus, setOnCampus] = useState(false);\n    // controls the modal for the menu of the tour page\n    // it is here so that /tour -> /library -> /tour will result in the menu being open still\n    const [modelOpen, toggleModel] = useState(false);\n\n    // multi-tour functionality, if the tour is passed in use it\n    // otherwise, it should default to the first tour or /markers.json\n    const location = useLocation();\n    const [currentTour, setTour] = useState(null);\n\n    // the marker.json data serialized into state\n    const [markerData, setData] = useState([]);\n    \n    const { project_name } = JSON.parse(localStorage.getItem(\"markerData\")) || { project_name: \"\" };\n    useTitle(project_name);\n\n\n    const fetchMarkerData = useCallback(\n        async (tourName) => {\n            const tourBasePath = tourName === null ? \"\" : tourName;\n\n            // make sure no path traveral exists\n            const alphanumeric = /^[a-zA-Z0-9]+$/;\n            if (tourBasePath === \"\" || alphanumeric.test(tourBasePath)) {\n                await fetch(process.env.PUBLIC_URL + tourBasePath + \"/markers.json\")\n                    .then(res => res.json())\n                    .then(res => {\n                        if (res.hasOwnProperty(\"hotspots\")) {\n\n                            // update the broswer's tour path whenever it changes\n                            if (JSON.stringify(tourName) !== JSON.stringify(localStorage.getItem(\"tourBasePath\")) )\n                                localStorage.setItem(\"tourBasePath\", JSON.stringify(tourName));\n\n                            // only set the data if it isn't equal to the current version\n                            if (JSON.stringify(res[\"hotspots\"]) !== JSON.stringify(markerData))\n                                setData(res[\"hotspots\"]);\n\n                            // state data might need set again, but localstorage usually propigates fine\n                            if (localStorage.getItem(\"markerData\") !== JSON.stringify(res)) {\n                                localStorage.setItem(\"markerData\", JSON.stringify(res));\n                                // reload so that the localstorage can be used\n                                window.location.reload();\n                            }\n\n                        }\n                    })\n                    .catch(err => console.error(\"[Error]: \" + err));\n            } else {\n                console.error(\"[Error]: Path traveral attempted, could not get marker data\");\n                // TODO: redirect to the default path of /markers.json file if this occurs\n            }\n        },\n        [markerData],\n    );\n\n    useEffect(() => {\n        const query = new URLSearchParams(location.search);\n        const tourName = query.get(\"tour\");\n\n        // if a new tour parameter passed in then set it and grab its data\n        if (currentTour !== tourName && location.pathname === \"/\") setTour(tourName);\n\n\n        // this is used to keep the markerdata persistent\n        // if on the homepage, look for the tour parameter to fetch the appropriate data\n        if (location.pathname === \"/\") {            \n            fetchMarkerData(tourName);\n        // if all else fails, get data is there are none\n        // this is so if the person reloads the page, it will pull the marker data from localstorage\n        } else if (markerData.length === 0 && localStorage.getItem(\"markerData\") !== null) {\n            const previousPath = JSON.parse(localStorage.getItem(\"tourBasePath\"));\n            // the path so that other parts of the app can use it\n            setTour(previousPath);\n            // then get the data needed\n            fetchMarkerData(previousPath);\n        }\n\n    }, [location, currentTour, markerData, fetchMarkerData]);\n\n    return (\n        <Context.Provider value={{\n            onCampus,\n            setOnCampus: val => { if (val !== onCampus) setOnCampus(val) },\n            modelOpen,\n            toggleModel: val => toggleModel(val),\n            markerData,\n            // can be used so the content will be pulled from the same folder\n            tourBasePath: currentTour === null ? \"\" : (currentTour + \"/\")\n        }}\n        >\n            {children}\n            <ToastContainer />\n        </Context.Provider>\n    );\n}\n\nReactDOM.render(\n    <BrowserRouter basename={window.location.pathname.substr(0, window.location.pathname.lastIndexOf('/'))}>\n        <Provider>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\nserviceWorker.register();"
    ],
    "sourceRoot": ""
}